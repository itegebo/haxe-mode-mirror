default namespace = "http://hxswfml.googlecode.com"

start =
  OConstructSuper
  | ONewBlock
  | OGetProp
  | OThrow
  | OpMemSet8
  | OGetLex
  | OCheckIsXml
  | DefineFont
  | BeginBitmapFill
  | OpMemGet32
  | PlaceObject
  | (notAllowed
     | element swf {
         attribute width {
           xsd:integer { minInclusive = "1" maxInclusive = "2880" }
         }?,
         attribute version { xsd:integer }?,
         attribute height {
           xsd:integer { minInclusive = "1" maxInclusive = "2880" }
         }?,
         attribute frameCount { xsd:integer }?,
         attribute fps {
           xsd:integer { minInclusive = "0" maxInclusive = "120" }
         }?,
         attribute compressed { xsd:boolean }?,
         FileAttributes?,
         ((SetBackgroundColor
           | ScriptLimits
           | MetaData
           | DefineBitsJPEG
           | DefineBinaryData
           | DefineSound
           | DefineFont
           | DefineEditText
           | DefineShape
           | DefineSprite
           | DefineButton
           | DefineScalingGrid
           | DefineABC
           | PlaceObject
           | RemoveObject
           | StartSound
           | SymbolClass
           | ExportAssets
           | ImportAssets
           | FrameLabel
           | Tween
           | Custom)*,
          ShowFrame+)+
       })
  | OpAnd
  | OCallStack
  | OInitProp
  | OGetSuper
  | OGetSlot
  | JGt
  | ShowFrame
  | RemoveObject
  | Tw
  | OSetProp
  | ORegKill
  | OpSub
  | JNeq
  | ColorMatrix
  | OpIn
  | DrawEllipse
  | OpAs
  | OSmallInt
  | OToString
  | OpIs
  | DefineBitsJPEG
  | OForIn
  | ONext
  | ImportAssets
  | OArray
  | JAlways
  | ODebugFile
  | OSwap
  | OFindPropStrict
  | SetBackgroundColor
  | OpSign16
  | OpDecr
  | OpXor
  | OpNeg
  | OpShl
  | SymbolClass
  | OpMemGetDouble
  | JNotGte
  | ODebugLine
  | JFalse
  | (notAllowed
     | element EndFrame { empty })
  | OpShr
  | OpLt
  | OClassDef
  | JNotLte
  | OInstanceOf
  | OScope
  | OpMemSet32
  | JEq
  | OToNumber
  | OpDiv
  | OpLte
  | Bevel
  | JLte
  | OCase
  | ORetVoid
  | abcfile
  | StartSound
  | OpGte
  | Blur
  | OpINeg
  | DefineScalingGrid
  | DefineSprite
  | MoveTo
  | abcfiles
  | OCast
  | ORet
  | ONull
  | OGetGlobalScope
  | DefineSound
  | OpIMul
  | OString
  | OpSign8
  | OAsString
  | OReg
  | OCatch
  | OpSign1
  | OForEach
  | OpMemSet16
  | FrameLabel
  | DefineBinaryData
  | DropShadow
  | LineStyle
  | OCallPropVoid
  | OLabel
  | OpIIncr
  | OpIDecr
  | OToUInt
  | JNotLt
  | OPop
  | ODeleteProp
  | OPushWith
  | OSetSuper
  | JTrue
  | function
  | OpMul
  | ButtonState
  | OpMemSetDouble
  | OAsAny
  | OpAdd
  | OFindProp
  | OpPhysEq
  | OFloat
  | OToBool
  | DrawCircle
  | OFunction
  | OAsType
  | OJump
  | OPopScope
  | DrawRect
  | init
  | class
  | OpMemGet8
  | JLt
  | Custom
  | OTypeof
  | OSetSlot
  | EndLine
  | OpEq
  | OpISub
  | OApplyType
  | DefineEditText
  | BeginFill
  | OCallPropLex
  | OGetDescendants
  | DrawRoundRect
  | EndFill
  | JPhysEq
  | DrawRoundRectComplex
  | GradientBevel
  | OSwitch
  | OToInt
  | ODup
  | OpMemGet16
  | OTrue
  | LineTo
  | OCallSuper
  | var
  | OUndefined
  | ONaN
  | CurveTo
  | OpBitNot
  | GradientGlow
  | DefineABC
  | OIntRef
  | ExportAssets
  | FileAttributes
  | DefineButton
  | OpIncr
  | OInt
  | OCallProperty
  | Glow
  | JGte
  | OpMod
  | OConstruct
  | OpMemSetFloat
  | OCallSuperVoid
  | OConstructProperty
  | OGetScope
  | OObject
  | OpIAdd
  | OpOr
  | OpMemGetFloat
  | OSetReg
  | Tween
  | BeginGradientFill
  | OSwitch2
  | JNotGt
  | ODecrIReg
  | OIncrIReg
  | OpGt
  | MetaData
  | ODebugReg
  | DefineShape
  | OFalse
  | OpUShr
  | ScriptLimits
  | OpNot
  | OThis
  | JPhysNeq
OSwitch2 =
  notAllowed
  | element OSwitch2 {
      attribute deltas { xsd:string },
      attribute default { xsd:string }
    }
ORet =
  notAllowed
  | element ORet { empty }
DrawRect =
  notAllowed
  | element DrawRect {
      attribute height { xsd:decimal }?,
      attribute width { xsd:decimal }?,
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
OpAs =
  notAllowed
  | element OpAs { empty }
OpMemGet16 =
  notAllowed
  | element OpMemGet16 { empty }
OCase =
  notAllowed
  | element OCase {
      attribute name { xsd:string }
    }
ShowFrame =
  notAllowed
  | element ShowFrame {
      attribute count { xsd:positiveInteger }?
    }
DefineSound =
  notAllowed
  | element DefineSound {
      attribute id { xsd:positiveInteger },
      attribute file { xsd:string }
    }
EndFill =
  notAllowed
  | element EndFill { empty }
Tween =
  notAllowed
  | element Tween {
      attribute frameCount { xsd:positiveInteger },
      attribute depth { xsd:positiveInteger }
    }
ButtonState =
  notAllowed
  | element ButtonState {
      attribute y { xsd:integer }?,
      attribute x { xsd:integer }?,
      attribute up { xsd:boolean }?,
      attribute scaleY { xsd:decimal }?,
      attribute scaleX { xsd:decimal }?,
      attribute rotate1 { xsd:decimal }?,
      attribute rotate0 { xsd:decimal }?,
      attribute over { xsd:boolean }?,
      attribute id { xsd:positiveInteger },
      attribute hit { xsd:boolean }?,
      attribute down { xsd:boolean }?,
      attribute depth { xsd:integer }
    }
OpOr =
  notAllowed
  | element OpOr { empty }
OpPhysEq =
  notAllowed
  | element OpPhysEq { empty }
OConstruct =
  notAllowed
  | element OConstruct {
      attribute v { xsd:integer }
    }
OpShr =
  notAllowed
  | element OpShr { empty }
OThrow =
  notAllowed
  | element OThrow { empty }
OLabel =
  notAllowed
  | element OLabel {
      attribute name { xsd:string }
    }
OSetReg =
  notAllowed
  | element OSetReg {
      attribute v { xsd:integer }
    }
OObject =
  notAllowed
  | element OObject {
      attribute v { xsd:integer }
    }
OSmallInt =
  notAllowed
  | element OSmallInt {
      attribute v { xsd:integer }
    }
ColorMatrix =
  notAllowed
  | element ColorMatrix {
      attribute data { xsd:string }?
    }
OpSign1 =
  notAllowed
  | element OpSign1 { empty }
OForEach =
  notAllowed
  | element OForEach { empty }
DefineBinaryData =
  notAllowed
  | element DefineBinaryData {
      attribute id { xsd:positiveInteger },
      attribute file { xsd:string }
    }
OTrue =
  notAllowed
  | element OTrue { empty }
ODeleteProp =
  notAllowed
  | element ODeleteProp {
      attribute v { xsd:string }
    }
DefineScalingGrid =
  notAllowed
  | element DefineScalingGrid {
      attribute y { xsd:integer },
      attribute x { xsd:integer },
      attribute width { xsd:integer },
      attribute id { xsd:positiveInteger },
      attribute height { xsd:integer }
    }
BeginGradientFill =
  notAllowed
  | element BeginGradientFill {
      attribute rotate1 { xsd:decimal },
      attribute rotate0 { xsd:decimal },
      attribute scaleY { xsd:decimal },
      attribute scaleX { xsd:decimal },
      attribute y { xsd:decimal },
      attribute x { xsd:decimal },
      attribute ratios { xsd:string },
      attribute alphas { xsd:string },
      attribute colors { xsd:string },
      attribute type { xsd:string "radial" | xsd:string "linear" }
    }
OToInt =
  notAllowed
  | element OToInt { empty }
ExportAssets =
  notAllowed
  | element ExportAssets {
      attribute id { xsd:nonNegativeInteger },
      attribute class { xsd:string }
    }
JAlways =
  notAllowed
  | element JAlways {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OpIIncr =
  notAllowed
  | element OpIIncr { empty }
OInitProp =
  notAllowed
  | element OInitProp {
      attribute v { text }
    }
OConstructProperty =
  notAllowed
  | element OConstructProperty {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
GradientBevel =
  notAllowed
  | element GradientBevel {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute ontop { xsd:boolean }?,
      attribute knockout { xsd:boolean }?,
      attribute inner { xsd:boolean }?,
      attribute strength {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute angle {
        xsd:decimal { minInclusive = "0" maxInclusive = "360" }
      }?,
      attribute distance {
        xsd:decimal { minInclusive = "0" maxInclusive = "8" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute colors { xsd:string }?
    }
OScope =
  notAllowed
  | element OScope { empty }
OpINeg =
  notAllowed
  | element OpINeg { empty }
OCallStack =
  notAllowed
  | element OCallStack {
      attribute v { xsd:integer }
    }
OAsString =
  notAllowed
  | element OAsString { empty }
OpIAdd =
  notAllowed
  | element OpIAdd { empty }
function =
  notAllowed
  | element function {
      attribute ns { xsd:string }?,
      attribute slot { xsd:integer }?,
      attribute native { xsd:boolean }?,
      attribute debugName { xsd:string }?,
      attribute usesDXNS { xsd:boolean }?,
      attribute argumentsDefined { xsd:boolean }?,
      attribute variableArgs { xsd:boolean }?,
      attribute unused { xsd:boolean }?,
      attribute newBlock { xsd:boolean }?,
      attribute nRegs { xsd:integer }?,
      attribute maxStack { xsd:integer }?,
      attribute maxScope { xsd:integer }?,
      attribute locals { xsd:string }?,
      attribute kind { xsd:string }?,
      attribute initScope { xsd:integer }?,
      attribute final { xsd:boolean }?,
      attribute f { xsd:string }?,
      attribute defaultParameters { xsd:string }?,
      attribute override { xsd:boolean }?,
      attribute static { xsd:boolean }?,
      attribute return { xsd:string }?,
      attribute args { xsd:string }?,
      attribute name { text },
      opcodes*
    }
JGt =
  notAllowed
  | element JGt {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
DefineSprite =
  notAllowed
  | element DefineSprite {
      attribute file { xsd:string }?,
      attribute id { xsd:positiveInteger },
      attribute frameCount { xsd:positiveInteger }?,
      ((PlaceObject
        | RemoveObject
        | StartSound
        | FrameLabel
        | Tween
        | Custom)*,
       ShowFrame+)+
    }
OpNeg =
  notAllowed
  | element OpNeg { empty }
OpShl =
  notAllowed
  | element OpShl { empty }
var =
  notAllowed
  | element var {
      attribute ns { xsd:string }?,
      attribute slot { xsd:integer }?,
      attribute static { xsd:boolean }?,
      attribute const { xsd:boolean }?,
      attribute value { xsd:string }?,
      attribute type { xsd:string }?,
      attribute name { xsd:string }
    }
JTrue =
  notAllowed
  | element JTrue {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OUndefined =
  notAllowed
  | element OUndefined { empty }
PlaceObject =
  notAllowed
  | element PlaceObject {
      attribute blendMode {
        xsd:string ""
        | xsd:string "screen"
        | xsd:string "erase"
        | xsd:string "darken"
        | xsd:string "normal"
        | xsd:string "layer"
        | xsd:string "hardlight"
        | xsd:string "multiply"
        | xsd:string "add"
        | xsd:string "invert"
        | xsd:string "difference"
        | xsd:string "subtract"
        | xsd:string "overlay"
        | xsd:string "alpha"
        | xsd:string "lighten"
      }?,
      attribute bitmapCache { xsd:boolean }?,
      attribute y { xsd:integer }?,
      attribute x { xsd:integer }?,
      attribute scaleY { xsd:decimal }?,
      attribute scaleX { xsd:decimal }?,
      attribute rotate1 { xsd:decimal }?,
      attribute rotate0 { xsd:decimal }?,
      attribute name { xsd:string }?,
      attribute move { xsd:boolean }?,
      attribute id { xsd:positiveInteger },
      attribute className { xsd:string }?,
      attribute hasImage { xsd:boolean }?,
      attribute depth { xsd:integer },
      (Blur
       | Glow
       | Bevel
       | DropShadow
       | GradientGlow
       | GradientBevel
       | ColorMatrix)*
    }
JNotLt =
  notAllowed
  | element JNotLt {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OpUShr =
  notAllowed
  | element OpUShr { empty }
ODup =
  notAllowed
  | element ODup { empty }
DropShadow =
  notAllowed
  | element DropShadow {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute knockout { xsd:boolean }?,
      attribute inner { xsd:boolean }?,
      attribute strength {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute distance {
        xsd:decimal { minInclusive = "0" maxInclusive = "8" }
      }?,
      attribute angle {
        xsd:decimal { minInclusive = "0" maxInclusive = "360" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute color {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{8})" }
      }?
    }
OConstructSuper =
  notAllowed
  | element OConstructSuper {
      attribute v { xsd:integer }
    }
OpMod =
  notAllowed
  | element OpMod { empty }
OSetSuper =
  notAllowed
  | element OSetSuper {
      attribute v { xsd:string }
    }
MetaData =
  notAllowed
  | element MetaData {
      attribute file { xsd:string }
    }
OpAnd =
  notAllowed
  | element OpAnd { empty }
OCallSuperVoid =
  notAllowed
  | element OCallSuperVoid {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
FileAttributes =
  notAllowed
  | element FileAttributes {
      attribute useNetwork { xsd:boolean }?,
      attribute useGPU { xsd:boolean }?,
      attribute useDirectBlit { xsd:boolean }?,
      attribute hasMetaData { xsd:boolean }?,
      attribute actionscript3 { xsd:boolean }?
    }
ONaN =
  notAllowed
  | element ONaN { empty }
FrameLabel =
  notAllowed
  | element FrameLabel {
      attribute name { xsd:string },
      attribute anchor { xsd:boolean }?
    }
ONext =
  notAllowed
  | element ONext {
      attribute v2 { xsd:integer },
      attribute v1 { xsd:integer }
    }
JNotGte =
  notAllowed
  | element JNotGte {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OToNumber =
  notAllowed
  | element OToNumber { empty }
JFalse =
  notAllowed
  | element JFalse {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OpMemGetFloat =
  notAllowed
  | element OpMemGetFloat { empty }
EndLine =
  notAllowed
  | element EndLine { empty }
DefineShape =
  notAllowed
  | element DefineShape {
      attribute y { xsd:integer }?,
      attribute x { xsd:integer }?,
      attribute smooth { xsd:boolean }?,
      attribute scaleY { xsd:decimal }?,
      attribute scaleX { xsd:decimal }?,
      attribute rotate1 { xsd:decimal }?,
      attribute rotate0 { xsd:decimal }?,
      attribute repeat { xsd:boolean }?,
      attribute id { xsd:positiveInteger },
      attribute bitmapId { xsd:positiveInteger }?,
      (LineStyle
       | BeginFill
       | BeginGradientFill
       | BeginBitmapFill
       | MoveTo
       | LineTo
       | CurveTo
       | DrawCircle
       | DrawEllipse
       | DrawRect
       | DrawRoundRect
       | DrawRoundRectComplex
       | EndLine
       | EndFill)*
    }
DrawRoundRectComplex =
  notAllowed
  | element DrawRoundRectComplex {
      attribute rbr { xsd:decimal }?,
      attribute rbl { xsd:decimal }?,
      attribute rtr { xsd:decimal }?,
      attribute rtl { xsd:decimal }?,
      attribute height { xsd:decimal }?,
      attribute width { xsd:decimal }?,
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
SetBackgroundColor =
  notAllowed
  | element SetBackgroundColor {
      attribute color {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{6})" }
      }?
    }
LineTo =
  notAllowed
  | element LineTo {
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
ORetVoid =
  notAllowed
  | element ORetVoid { empty }
OpIncr =
  notAllowed
  | element OpIncr { empty }
class =
  notAllowed
  | element class {
      attribute ns { xsd:string }?,
      attribute implements { xsd:string }?,
      attribute interface { xsd:boolean }?,
      attribute sealed { xsd:boolean }?,
      attribute final { xsd:boolean }?,
      attribute extends { xsd:string }?,
      attribute name { xsd:string },
      var*,
      function*
    }
OpSign8 =
  notAllowed
  | element OpSign8 { empty }
OCallProperty =
  notAllowed
  | element OCallProperty {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
OTypeof =
  notAllowed
  | element OTypeof { empty }
GradientGlow =
  notAllowed
  | element GradientGlow {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute ontop { xsd:boolean }?,
      attribute knockout { xsd:boolean }?,
      attribute inner { xsd:boolean }?,
      attribute strength {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute distance {
        xsd:decimal { minInclusive = "0" maxInclusive = "8" }
      }?,
      attribute angle {
        xsd:decimal { minInclusive = "0" maxInclusive = "360" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute colors { xsd:string }?
    }
OForIn =
  notAllowed
  | element OForIn { empty }
abcfiles =
  notAllowed
  | element abcfiles { abcfile+ }
BeginFill =
  notAllowed
  | element BeginFill {
      attribute color {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{6})" }
      }?,
      attribute alpha { xsd:decimal }?
    }
OpIMul =
  notAllowed
  | element OpIMul { empty }
Bevel =
  notAllowed
  | element Bevel {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute ontop { xsd:boolean }?,
      attribute knockout { xsd:boolean }?,
      attribute inner { xsd:boolean }?,
      attribute strength {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute angle {
        xsd:decimal { minInclusive = "0" maxInclusive = "360" }
      }?,
      attribute distance {
        xsd:decimal { minInclusive = "0" maxInclusive = "8" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute color2 {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{8})" }
      }?,
      attribute color1 {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{8})" }
      }?
    }
OThis =
  notAllowed
  | element OThis { empty }
LineStyle =
  notAllowed
  | element LineStyle {
      attribute color {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{6})" }
      }?,
      attribute alpha { xsd:decimal }?,
      attribute width { xsd:decimal }?
    }
OIntRef =
  notAllowed
  | element OIntRef {
      attribute v { xsd:integer }
    }
JGte =
  notAllowed
  | element JGte {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OApplyType =
  notAllowed
  | element OApplyType {
      attribute v { xsd:integer }
    }
OAsType =
  notAllowed
  | element OAsType {
      attribute v { xsd:string }
    }
OCallPropVoid =
  notAllowed
  | element OCallPropVoid {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
OSetProp =
  notAllowed
  | element OSetProp {
      attribute v { xsd:string }
    }
OpDecr =
  notAllowed
  | element OpDecr { empty }
OpISub =
  notAllowed
  | element OpISub { empty }
DrawEllipse =
  notAllowed
  | element DrawEllipse {
      attribute height { xsd:decimal }?,
      attribute width { xsd:decimal }?,
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
OpMul =
  notAllowed
  | element OpMul { empty }
Tw =
  notAllowed
  | element Tw {
      attribute end { xsd:decimal },
      attribute start { xsd:decimal },
      attribute prop {
        xsd:string "scaleX"
        | xsd:string "scaleY"
        | xsd:string "rotate1"
        | xsd:string "rotate0"
        | xsd:string "y"
        | xsd:string "x"
      }
    }
JNotGt =
  notAllowed
  | element JNotGt {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OGetScope =
  notAllowed
  | element OGetScope {
      attribute v { xsd:integer }
    }
DrawCircle =
  notAllowed
  | element DrawCircle {
      attribute sections { xsd:integer }?,
      attribute r { xsd:decimal }?,
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
OpMemSetDouble =
  notAllowed
  | element OpMemSetDouble { empty }
JEq =
  notAllowed
  | element JEq {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OFloat =
  notAllowed
  | element OFloat {
      attribute v { xsd:string }
    }
OFindProp =
  notAllowed
  | element OFindProp {
      attribute v { xsd:string }
    }
ScriptLimits =
  notAllowed
  | element ScriptLimits {
      attribute scriptTimeoutSeconds {
        xsd:integer { minInclusive = "0" maxInclusive = "65535" }
      }?,
      attribute maxRecursionDepth { xsd:integer }?
    }
OpIn =
  notAllowed
  | element OpIn { empty }
OCheckIsXml =
  notAllowed
  | element OCheckIsXml { empty }
OGetProp =
  notAllowed
  | element OGetProp {
      attribute v { text }
    }
OClassDef =
  notAllowed
  | element OClassDef {
      attribute v { xsd:string }
    }
OCallSuper =
  notAllowed
  | element OCallSuper {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
OGetLex =
  notAllowed
  | element OGetLex {
      attribute v { text }
    }
OIncrIReg =
  notAllowed
  | element OIncrIReg {
      attribute v { xsd:integer }
    }
opcodes =
  (OCallPropLex
   | OInstanceOf
   | OAsString
   | ORegKill
   | OCallSuperVoid
   | OCallSuper
   | OSwap
   | OArray
   | OClassDef
   | ODebugFile
   | ODebugLine
   | ODup
   | OFunction
   | OGetGlobalScope
   | OGetLex
   | OGetProp
   | OInitProp
   | OReg
   | ORetVoid
   | OScope
   | OSetProp
   | OSetReg
   | OThis
   | JAlways
   | JEq
   | JGte
   | JFalse
   | JGt
   | OpLte
   | JLt
   | JLte
   | JNeq
   | JNotLte
   | JNotGt
   | JNotGte
   | JNotLt
   | JTrue
   | OAsAny
   | OAsType
   | OCallPropVoid
   | OCallProperty
   | OCallStack
   | OCast
   | OConstruct
   | OConstructProperty
   | OConstructSuper
   | OFalse
   | OFindProp
   | OFindPropStrict
   | OForIn
   | OGetScope
   | OIncrIReg
   | OIntRef
   | OJump
   | JPhysNeq
   | OLabel
   | ONewBlock
   | ONext
   | ONull
   | OObject
   | OForEach
   | OPop
   | ORet
   | OSetSlot
   | OSmallInt
   | OString
   | OToBool
   | OToInt
   | OToNumber
   | OTrue
   | OTypeof
   | OpAdd
   | OpAs
   | OpEq
   | OpGt
   | OpIIncr
   | OpIs
   | OpLt
   | OpMul
   | OpNot
   | OPopScope
   | ODebugReg
   | OpIDecr
   | ODeleteProp
   | OpISub
   | OpIAdd
   | OpINeg
   | OThrow
   | OpShr
   | OToUInt
   | OpAnd
   | OSwitch
   | OSwitch2
   | OInt
   | OpShl
   | OFloat
   | OpDiv
   | OpUShr
   | OpSub
   | ONaN
   | OpOr
   | ODecrIReg
   | OpIMul
   | OpMod
   | OpXor
   | OpNeg
   | OpBitNot
   | OpGte
   | OGetSlot
   | OCase
   | OApplyType
   | OpIncr
   | OpDecr
   | OpPhysEq
   | OpIn
   | OpMemGet8
   | OpMemGet16
   | OpMemGet32
   | OpMemGetFloat
   | OpMemGetDouble
   | OpMemSet8
   | OpMemSet16
   | OpMemSet32
   | OpMemSetFloat
   | OpMemSetDouble
   | OpSign1
   | OpSign8
   | OpSign16
   | OCheckIsXml
   | OCatch
   | OGetSuper
   | OSetSuper
   | OUndefined
   | OPushWith
   | JPhysEq
   | OToString
   | OGetDescendants)+
Custom =
  notAllowed
  | element Custom {
      attribute comment { xsd:string }?,
      attribute data { xsd:string }?,
      attribute file { xsd:string }?,
      attribute tagId { xsd:positiveInteger }?
    }
BeginBitmapFill =
  notAllowed
  | element BeginBitmapFill {
      attribute smooth { xsd:boolean }?,
      attribute repeat { xsd:boolean }?,
      attribute rotate1 { xsd:decimal },
      attribute rotate0 { xsd:decimal },
      attribute scaleY { xsd:decimal },
      attribute scaleX { xsd:decimal },
      attribute y { xsd:decimal },
      attribute x { xsd:decimal },
      attribute bitmapId { xsd:positiveInteger }
    }
OpLt =
  notAllowed
  | element OpLt { empty }
OArray =
  notAllowed
  | element OArray {
      attribute v { xsd:integer }
    }
ODecrIReg =
  notAllowed
  | element ODecrIReg {
      attribute v { xsd:integer }
    }
OpBitNot =
  notAllowed
  | element OpBitNot { empty }
JLt =
  notAllowed
  | element JLt {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OPop =
  notAllowed
  | element OPop { empty }
OGetSlot =
  notAllowed
  | element OGetSlot {
      attribute v { xsd:integer }
    }
OString =
  notAllowed
  | element OString {
      attribute v { text }
    }
OFindPropStrict =
  notAllowed
  | element OFindPropStrict {
      attribute v { xsd:string }
    }
StartSound =
  notAllowed
  | element StartSound {
      attribute stop { xsd:boolean }?,
      attribute loopCount { xsd:nonNegativeInteger }?,
      attribute id { xsd:positiveInteger }
    }
OpSub =
  notAllowed
  | element OpSub { empty }
DefineButton =
  notAllowed
  | element DefineButton {
      attribute id { xsd:positiveInteger },
      ButtonState+
    }
OpXor =
  notAllowed
  | element OpXor { empty }
OpGt =
  notAllowed
  | element OpGt { empty }
OpNot =
  notAllowed
  | element OpNot { empty }
OSwitch =
  notAllowed
  | element OSwitch {
      attribute deltas { xsd:string },
      attribute default { xsd:integer }
    }
DrawRoundRect =
  notAllowed
  | element DrawRoundRect {
      attribute r { xsd:decimal }?,
      attribute height { xsd:decimal }?,
      attribute width { xsd:decimal }?,
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
OToString =
  notAllowed
  | element OToString { empty }
ONull =
  notAllowed
  | element ONull { empty }
OToUInt =
  notAllowed
  | element OToUInt { empty }
OCatch =
  notAllowed
  | element OCatch {
      attribute variable { xsd:string }?,
      attribute type { xsd:string },
      attribute handle { xsd:integer },
      attribute end { xsd:integer },
      attribute start { xsd:integer },
      attribute v { xsd:integer }
    }
OFalse =
  notAllowed
  | element OFalse { empty }
OpGte =
  notAllowed
  | element OpGte { empty }
OPushWith =
  notAllowed
  | element OPushWith { empty }
SymbolClass =
  notAllowed
  | element SymbolClass {
      attribute id { xsd:nonNegativeInteger },
      attribute class { xsd:string },
      attribute base { xsd:string }?
    }
DefineBitsJPEG =
  notAllowed
  | element DefineBitsJPEG {
      attribute id { xsd:positiveInteger },
      attribute file { xsd:string }
    }
OToBool =
  notAllowed
  | element OToBool { empty }
OPopScope =
  notAllowed
  | element OPopScope { empty }
RemoveObject =
  notAllowed
  | element RemoveObject {
      attribute depth { xsd:integer }
    }
OReg =
  notAllowed
  | element OReg {
      attribute v { xsd:integer }
    }
JLte =
  notAllowed
  | element JLte {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OpMemSetFloat =
  notAllowed
  | element OpMemSetFloat { empty }
JNotLte =
  notAllowed
  | element JNotLte {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
JPhysEq =
  notAllowed
  | element JPhysEq {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
init =
  notAllowed
  | element init {
      attribute ns { xsd:string }?,
      attribute nRegs { xsd:integer }?,
      attribute maxStack { xsd:integer }?,
      attribute maxScope { xsd:integer }?,
      attribute initScope { xsd:integer }?,
      attribute return { xsd:string }?,
      attribute name { xsd:string },
      opcodes*
    }
OpAdd =
  notAllowed
  | element OpAdd { empty }
DefineFont =
  notAllowed
  | element DefineFont {
      attribute name { xsd:string }?,
      attribute charCodes { xsd:string }?,
      attribute id { xsd:positiveInteger },
      attribute file { xsd:string }
    }
JPhysNeq =
  notAllowed
  | element JPhysNeq {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
abcfile =
  notAllowed
  | element abcfile {
      attribute name { xsd:string }?,
      (class | init | function+)+
    }
OCallPropLex =
  notAllowed
  | element OCallPropLex {
      attribute v { xsd:string },
      attribute nargs { xsd:integer }
    }
ODebugReg =
  notAllowed
  | element ODebugReg {
      attribute line { xsd:integer },
      attribute r { xsd:integer },
      attribute name { xsd:string }
    }
OCast =
  notAllowed
  | element OCast {
      attribute v { xsd:string }
    }
OSetSlot =
  notAllowed
  | element OSetSlot {
      attribute v { xsd:integer }
    }
OFunction =
  notAllowed
  | element OFunction {
      attribute v { xsd:string }
    }
CurveTo =
  notAllowed
  | element CurveTo {
      attribute ay { xsd:decimal }?,
      attribute ax { xsd:decimal }?,
      attribute cy { xsd:decimal }?,
      attribute cx { xsd:decimal }?
    }
OGetGlobalScope =
  notAllowed
  | element OGetGlobalScope { empty }
OpMemSet32 =
  notAllowed
  | element OpMemSet32 { empty }
OpLte =
  notAllowed
  | element OpLte {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OJump =
  notAllowed
  | element OJump {
      attribute name { xsd:string }
    }
OGetSuper =
  notAllowed
  | element OGetSuper {
      attribute v { xsd:string }
    }
DefineEditText =
  notAllowed
  | element DefineEditText {
      attribute wordWrap { xsd:boolean }?,
      attribute width { xsd:integer }?,
      attribute wasStatic { xsd:boolean }?,
      attribute variableName { xsd:string }?,
      attribute useOutlines { xsd:boolean }?,
      attribute textColor {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{6})" }
      }?,
      attribute alpha { xsd:decimal }?,
      attribute selectable { xsd:boolean }?,
      attribute rightMargin { xsd:integer }?,
      attribute password { xsd:boolean }?,
      attribute multiline { xsd:boolean }?,
      attribute maxLength { xsd:integer }?,
      attribute leftMargin { xsd:integer }?,
      attribute leading { xsd:integer }?,
      attribute input { xsd:boolean }?,
      attribute initialText { xsd:string }?,
      attribute indent { xsd:integer }?,
      attribute id { xsd:positiveInteger },
      attribute html { xsd:boolean }?,
      attribute height { xsd:integer }?,
      attribute fontID { xsd:positiveInteger }?,
      attribute fontHeight { xsd:integer }?,
      attribute fontClass { xsd:string }?,
      attribute file { xsd:string }?,
      attribute border { xsd:boolean }?,
      attribute autoSize { xsd:boolean }?,
      attribute align {
        xsd:integer { minInclusive = "0" maxInclusive = "3" }
      }?
    }
ImportAssets =
  notAllowed
  | element ImportAssets {
      attribute url { xsd:string }
    }
ORegKill =
  notAllowed
  | element ORegKill {
      attribute v { xsd:integer }
    }
OInt =
  notAllowed
  | element OInt {
      attribute v { xsd:integer }
    }
OpMemGetDouble =
  notAllowed
  | element OpMemGetDouble { empty }
OpIs =
  notAllowed
  | element OpIs { empty }
Blur =
  notAllowed
  | element Blur {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?
    }
OpMemSet8 =
  notAllowed
  | element OpMemSet8 { empty }
Glow =
  notAllowed
  | element Glow {
      attribute passes {
        xsd:positiveInteger { minInclusive = "1" maxInclusive = "15" }
      }?,
      attribute knockout { xsd:boolean }?,
      attribute inner { xsd:boolean }?,
      attribute strength {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurY {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute blurX {
        xsd:decimal { minInclusive = "0" maxInclusive = "255" }
      }?,
      attribute color {
        xsd:string { pattern = "(0x[0-9A-Fa-f]{8})" }
      }?
    }
OpMemGet8 =
  notAllowed
  | element OpMemGet8 { empty }
OSwap =
  notAllowed
  | element OSwap { empty }
MoveTo =
  notAllowed
  | element MoveTo {
      attribute y { xsd:decimal }?,
      attribute x { xsd:decimal }?
    }
OGetDescendants =
  notAllowed
  | element OGetDescendants {
      attribute v { xsd:string }
    }
ODebugFile =
  notAllowed
  | element ODebugFile {
      attribute v { xsd:string }
    }
OpSign16 =
  notAllowed
  | element OpSign16 { empty }
ONewBlock =
  notAllowed
  | element ONewBlock { empty }
OpMemGet32 =
  notAllowed
  | element OpMemGet32 { empty }
OInstanceOf =
  notAllowed
  | element OInstanceOf { empty }
DefineABC =
  notAllowed
  | element DefineABC {
      attribute isBoot { xsd:boolean }?,
      attribute name { xsd:string }?,
      attribute file { xsd:string }?,
      (abcfiles | abcfile)*
    }
OpIDecr =
  notAllowed
  | element OpIDecr { empty }
OpEq =
  notAllowed
  | element OpEq { empty }
OAsAny =
  notAllowed
  | element OAsAny { empty }
JNeq =
  notAllowed
  | element JNeq {
      attribute offset { xsd:integer }?,
      attribute jump { xsd:string }?,
      attribute label { xsd:string }?
    }
OpDiv =
  notAllowed
  | element OpDiv { empty }
ODebugLine =
  notAllowed
  | element ODebugLine {
      attribute v { xsd:integer }
    }
OpMemSet16 =
  notAllowed
  | element OpMemSet16 { empty }
